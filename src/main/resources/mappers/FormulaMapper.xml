<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hdi.hdi.dao.FormulaMapper" >
  <resultMap id="BaseResultMap" type="com.hdi.hdi.pojo.Formula" >
    <constructor >
      <idArg column="formula_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="formula_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="classic" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="group" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sub_group" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="source" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    formula_id, formula_name, classic, `group`, sub_group, `source`, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from hdi_formula
    where formula_id = #{formulaId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from hdi_formula
    where formula_id = #{formulaId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hdi.hdi.pojo.Formula" >
    insert into hdi_formula (formula_id, formula_name, classic, 
      group, sub_group, source, 
      create_time, update_time)
    values (#{formulaId,jdbcType=VARCHAR}, #{formulaName,jdbcType=VARCHAR}, #{classic,jdbcType=VARCHAR}, 
      #{group,jdbcType=VARCHAR}, #{subGroup,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hdi.hdi.pojo.Formula" >
    insert into hdi_formula
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="formulaId != null" >
        formula_id,
      </if>
      <if test="formulaName != null" >
        formula_name,
      </if>
      <if test="classic != null" >
        classic,
      </if>
      <if test="group != null" >
        group,
      </if>
      <if test="subGroup != null" >
        sub_group,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="formulaId != null" >
        #{formulaId,jdbcType=VARCHAR},
      </if>
      <if test="formulaName != null" >
        #{formulaName,jdbcType=VARCHAR},
      </if>
      <if test="classic != null" >
        #{classic,jdbcType=VARCHAR},
      </if>
      <if test="group != null" >
        #{group,jdbcType=VARCHAR},
      </if>
      <if test="subGroup != null" >
        #{subGroup,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hdi.hdi.pojo.Formula" >
    update hdi_formula
    <set >
      <if test="formulaName != null" >
        formula_name = #{formulaName,jdbcType=VARCHAR},
      </if>
      <if test="classic != null" >
        classic = #{classic,jdbcType=VARCHAR},
      </if>
      <if test="group != null" >
        group = #{group,jdbcType=VARCHAR},
      </if>
      <if test="subGroup != null" >
        sub_group = #{subGroup,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where formula_id = #{formulaId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hdi.hdi.pojo.Formula" >
    update hdi_formula
    set formula_name = #{formulaName,jdbcType=VARCHAR},
      classic = #{classic,jdbcType=VARCHAR},
      group = #{group,jdbcType=VARCHAR},
      sub_group = #{subGroup,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where formula_id = #{formulaId,jdbcType=VARCHAR}
  </update>


  <select id="checkFormula" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(1) from hdi_formula
    where formula_name = #{formulaName}
  </select>

  <select id="selectFormula" parameterType="string" resultMap="BaseResultMap">
  SELECT
  <include refid="Base_Column_List" />
  from hdi_formula
  where formula_name = #{formulaName}
  AND `group` = #{group}
  AND sub_group = #{subGroup}
</select>


</mapper>